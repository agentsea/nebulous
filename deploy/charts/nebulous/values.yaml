# -- Override the namespace. Defaults to the Helm release's namespace.
namespaceOverride: ""

## Nebulous configuration
image:
  repository: ""
  pullPolicy: "IfNotPresent"
  # -- The nebulous image tag. Defaults to the chart's appVersion.
  tag: ""

serviceAccount:
  create: true
  # -- The name of the service account to use. Required if 'create' is false.
  name: ""

service:
  name: ""
  # -- The port of the Kubernetes Service.
  port: 3000

ingress:
  # -- If enabled, create an Ingress resource.
  enabled: false

  host: ""
  className: ""
  annotations: { }

local:
  # -- If enabled, nebulous can run Pods in the local cluster.
  enabled: false
  # -- The namespace to launch Pods in. Defaults to the Helm release's namespace.
  namespace: ""

messageQueue:
  # -- The message queue type. Defaults to "redis", the currently only supported value.
  type: "redis"

encryptionKey:
  # -- The name of the secret containing the 32 byte encryption key.
  secretName: ""
    # -- The key in the secret containing the encryption key.
  secretKey: ""

  # -- If enabled, create an encryption key secret. Not recommended for production.
  create: true
  # -- The 32 byte encryption key encoded in base64. Required if 'create' is true. Not recommended for production.
  encodedValue: ""

## Storage configuration
storage:
  huggingfaceCache:
    claimName: "huggingface-cache-pvc"

    createPersistentVolumeClaim: true
    size: "100Gi"
    storageClassName: ""

  adapter:
    claimName: "adapter-pvc"

    createPersistentVolumeClaim: true
    size: "100Gi"
    storageClassName: ""

  dataset:
    claimName: "dataset-pvc"

    createPersistentVolumeClaim: true
    size: "100Gi"
    storageClassName: ""

  model:
    claimName: "model-pvc"

    createPersistentVolumeClaim: true
    size: "1000Gi"
    storageClassName: ""

## Database configuration
postgres:
  host: ""
  port: 5432

  database: "nebulous"

  auth:
    user: "nebulous"
    password: "nebulous"

  secret:
    # -- Name of the secret with the Postgres connection string. Takes precedence over 'auth'. Ignored if 'create' is true.
    name: ""
    keys:
      connection_string: ""

  # -- If enabled, create a Postgres deployment and service. Not recommended for production.
  create: false
  # -- The postgres image tag. Defaults to "latest".
  imageTag: ""
  persistence:
    # -- If enabled, use a PersistentVolumeClaim for the Postgres data.
    enabled: false
    claimName: ""

    # -- If true, create a new PersistentVolumeClaim for the Postgres data.
    createPersistentVolumeClaim: false
    size: "100Gi"
    storageClassName: ""

redis:
  host: ""
  port: 6379

  # -- The Redis database number. Defaults to 0.
  database: 0

  auth:
    password: ""

  secret:
    # -- Name of the secret with the Redis connection string and password. Takes precedence over 'auth'. Ignored if 'create' is true.
    name: ""
    keys:
      connection_string: ""
      password: ""

  # -- If enabled, create a Redis deployment and service. Not recommended for production.
  create: false
  # -- The redis image tag. Defaults to "latest".
  imageTag: ""

  ingress:
    # -- If enabled, create an Ingress resource for the Redis service.
    enabled: false

    host: ""
    className: ""
    annotations: { }

## Provider configuration
providers:
  aws:
    enabled: false

    auth:
      accessKeyId: ""
      secretAccessKey: ""

    secret:
      name: ""
      keys:
        accessKeyId: ""
        secretAccessKey: ""

  runpod:
    enabled: false

    auth:
      apiKey: ""

    secret:
      name: ""
      keys:
        apiKey: ""
