{{- if or .Values.postgres.auth.host .Values.postgres.create }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.postgres.secret.name }}
  namespace: {{ include "nebulous.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
type: Opaque
data:
  {{ .Values.postgres.secret.keys.connectionString }}: {{ printf "postgresql://%s:%s@%s:%d/%s" .Values.postgres.auth.user .Values.postgres.auth.password (include "postgres.host" . ) (int .Values.postgres.auth.port) .Values.postgres.auth.database | b64enc }}
---
{{- end }}
{{- if .Values.postgres.create }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "postgres.name" . }}
  namespace: {{ include "nebulous.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: {{ include "postgres.name" . }}
    app.kubernetes.io/component: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "postgres.name" . }}
  serviceName: {{ include "postgres.name" . }}
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app.kubernetes.io/name: postgres
        app.kubernetes.io/instance: {{ include "postgres.name" . }}
        app.kubernetes.io/component: database
        app: {{ include "postgres.name" . }}
    spec:
      containers:
        - name: postgres
          image: "postgres:{{ .Values.postgres.imageTag }}"
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgres.auth.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgres.auth.user }}
            - name: POSTGRES_PASSWORD
              value: {{ .Values.postgres.auth.password }}
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          {{- with .Values.postgres.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: {{ include "postgres.name" . }}
        labels:
          {{- include "common.labels" . | nindent 8 }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size }}
        {{- if .Values.postgres.persistence.storageClassName }}
        storageClassName: {{ .Values.postgres.persistence.storageClassName }}
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "postgres.name" . }}
  namespace: {{ include "nebulous.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  selector:
    app: {{ include "postgres.name" . }}
  ports:
    - protocol: TCP
      port: {{ .Values.postgres.auth.port }}
      targetPort: 5432
  type: ClusterIP
{{- end }}