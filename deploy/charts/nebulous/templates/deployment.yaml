apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nebulous.deploymentName" . }}
  namespace: {{ include "nebulous.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "nebulous.appSelector" . }}
  template:
    metadata:
      labels:
        app: {{ include "nebulous.appSelector" . }}
      {{- if .Values.headscale.create }}
      annotations:
        "helm.sh/restart-timestamp": "{{ now | date "20250101010203" }}"
      {{- end }}
    spec:
      serviceAccountName: {{ include "nebulous.serviceAccountName" . }}
      containers:
        # Reference: https://github.com/tailscale/tailscale/blob/main/docs/k8s/sidecar.yaml
        # Docs: https://tailscale.com/kb/1185/kubernetes
        - name: tailscale
          image: tailscale/tailscale:latest
          imagePullPolicy: Always
          env:
            - name: TS_USERSPACE
              value: "false"
            - name: TS_DEBUG_FIREWALL_MODE
              value: auto
            - name: TS_AUTH_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.tailscale.secret.name }}
                  key: {{ .Values.tailscale.secret.keys.authKey }}
            - name: TS_HOSTNAME
              value: "nebu"
            - name: TS_EXTRA_ARGS
              value: --login-server {{ include "tailscale.loginServer" . }}
            - name: TS_KUBE_SECRET
              value: {{ include "nebulous.tailscaleStateSecretName" . }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_UID
              valueFrom:
                fieldRef:
                  fieldPath: metadata.uid
          securityContext:
            privileged: true
          volumeMounts:
            # Share /var/run/tailscale and /tmp to provide nebulous access to the Tailscale daemon
            - name: var-run-tailscale
              mountPath: /var/run/tailscale
            - name: tmp
              mountPath: /tmp
        - name: nebulous-server
          image: {{ include "nebulous.image" . }}
          {{- with .Values.image.pullPolicy }}
          imagePullPolicy: {{.}}
          {{- end }}
          ports:
            - containerPort: 3000
          command:
            - "/bin/sh"
            - "-c"
            - "exec nebu serve --host 0.0.0.0 --port 3000"
          env:
            - name: NEBU_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.encryptionKey.secret.name }}
                  key: {{ .Values.encryptionKey.secret.keys.encryptionKey }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgres.secret.name }}
                  key: {{ .Values.postgres.secret.keys.connectionString }}
            - name: MESSAGE_QUEUE_TYPE
              value: {{ .Values.messageQueue.type }}
            {{- if eq .Values.messageQueue.type "redis" }}
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secret.name }}
                  key: {{ .Values.redis.secret.keys.connectionString }}
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.redis.secret.name }}
                  key: {{ .Values.redis.secret.keys.password }}
            {{- end }}
            {{- if .Values.providers.aws.enabled }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.providers.aws.secret.name }}
                  key: {{ .Values.providers.aws.secret.keys.accessKeyId }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.providers.aws.secret.name }}
                  key: {{ .Values.providers.aws.secret.keys.secretAccessKey }}
            {{- end }}
            {{- if .Values.providers.runpod.enabled }}
            - name: RUNPOD_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.providers.runpod.secret.name }}
                  key: {{ .Values.providers.runpod.secret.keys.apiKey }}
            - name: RUNPOD_CONTAINER_REGISTRY_AUTH_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.providers.runpod.secret.name }}
                  key: {{ .Values.providers.runpod.secret.keys.containerRegistryAuthId }}
            {{- end }}
            - name: RUST_LOG
              value: {{ .Values.logLevel | lower }}
            - name: NEBU_BUCKET_NAME
              value: {{ .Values.bucket.name }}
            - name: NEBU_BUCKET_REGION
              value: {{ .Values.bucket.region }}
            - name: NEBU_ROOT_OWNER
              value: {{ .Values.rootOwner }}
            - name: TS_API_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.tailscale.secret.name }}
                  key: {{ .Values.tailscale.secret.keys.apiKey }}
            {{- if .Values.openmeter.enabled }}
            - name: OPENMETER_URL
              value: {{ .Values.openmeter.url }}
            - name: OPENMETER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.openmeter.secret.name }}
                  key: {{ .Values.openmeter.secret.keys.token }}
            {{- end }}
{{- with .Values.extraEnv }}
{{ toYaml . | indent 12 }}
{{- end }}
          volumeMounts:
            - name: huggingface-pvc
              mountPath: /huggingface
            - name: adapter-pvc
              mountPath: /adapters
            - name: dataset-pvc
              mountPath: /datasets
            - name: model-pvc
              mountPath: /models
            # Share /var/run/tailscale and /tmp to provide nebulous access to the Tailscale daemon
            - name: var-run-tailscale
              mountPath: /var/run/tailscale
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: huggingface-pvc
          persistentVolumeClaim:
            claimName: {{ .Values.storage.huggingface.claimName }}
        - name: adapter-pvc
          persistentVolumeClaim:
            claimName: {{ .Values.storage.adapter.claimName }}
        - name: dataset-pvc
          persistentVolumeClaim:
            claimName: {{ .Values.storage.dataset.claimName }}
        - name: model-pvc
          persistentVolumeClaim:
            claimName: {{ .Values.storage.model.claimName }}
        - name: var-run-tailscale
          emptyDir: {}
        - name: tmp
          emptyDir: {}
