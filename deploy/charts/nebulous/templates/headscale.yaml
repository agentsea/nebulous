{{- if .Values.headscale.create }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "headscale.name" . }}
  namespace: {{ include "headscale.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
data:
  config.yaml: |
    server_url: {{ printf "https://%s:443" .Values.headscale.domain }}
    listen_addr: 0.0.0.0:8080
    metrics_listen_addr: 0.0.0.0:9090
    noise:
      private_key_path: /var/lib/headscale/noise_private.key
    prefixes:
      v4: 100.64.0.0/10
      v6: fd7a:115c:a1e0::/48
    {{- if .Values.headscale.tls.letsencrypt.hostname }}
    tls_letsencrypt_hostname: {{ .Values.headscale.tls.letsencrypt.hostname }}
    acme_email: {{ .Values.headscale.tls.letsencrypt.email }}
    tls_letsencrypt_listen: ":http"
    tls_letsencrypt_cache_dir: /var/lib/headscale/cache
    tls_letsencrypt_challenge_type: HTTP-01
    {{- end }}
    tls_cert_path: ""
    tls_key_path: ""
    database:
      type: sqlite
      sqlite:
        path: /var/lib/headscale/db.sqlite
    derp:
      server:
        enabled: false
    {{- with .Values.headscale.derp.externalMaps }}
      urls: {{ toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.headscale.derp.configMap.name }}
      paths:
        - /mnt/derp/{{ .Values.headscale.derp.configMap.key }}
    {{- end }}
    dns:
      base_domain: {{ .Values.headscale.dns.baseDomain }}
    log:
      format: {{ .Values.headscale.log.format }}
      level: {{ .Values.headscale.log.level }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "headscale.name" . }}
  namespace: {{ include "headscale.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
    app.kubernetes.io/name: headscale
    app.kubernetes.io/instance: {{ include "headscale.name" . }}
    app.kubernetes.io/component: headscale
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "headscale.name" . }}
  serviceName: {{ include "headscale.name" . }}
  template:
    metadata:
      labels:
        {{- include "common.labels" . | nindent 8 }}
        app.kubernetes.io/name: headscale
        app.kubernetes.io/instance: {{ include "headscale.name" . }}
        app.kubernetes.io/component: headscale
        app: {{ include "headscale.name" . }}
    spec:
      containers:
        - name: headscale
          image: "headscale/headscale:{{ .Values.headscale.imageTag }}"
          command:
            - headscale
            - serve
          ports:
            - containerPort: 8080
            - containerPort: 9090
          volumeMounts:
            - mountPath: /etc/headscale
              name: config
            - mountPath: /var/lib/headscale
              name: data
            {{- if .Values.headscale.derp.configMap.name }}
            - mountPath: /mnt/derp
              name: derp-config
            {{- end }}
          {{- with .Values.headscale.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "headscale.name" . }}
        {{- if .Values.headscale.derp.configMap.name }}
        - name: derp-config
          configMap:
            name: {{ .Values.headscale.derp.configMap.name }}
        {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "common.labels" . | nindent 10 }}
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: {{ .Values.headscale.persistence.size }}
        {{- if .Values.headscale.persistence.storageClassName }}
        storageClassName: {{ .Values.headscale.persistence.storageClassName }}
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "headscale.serviceName" . }}
  namespace: {{ include "headscale.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
  {{- with .Values.headscale.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    app: {{ include "headscale.name" . }}
  ports:
    - protocol: TCP
      port: {{ .Values.headscale.service.port }}
      targetPort: 8080
  type: {{ .Values.headscale.service.type }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "headscale.name" . }}-metrics
  namespace: {{ include "headscale.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
spec:
  selector:
    app: {{ include "headscale.name" . }}
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  type: ClusterIP
---
{{- if .Values.headscale.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "headscale.serviceName" . }}
  namespace: {{ include "headscale.namespace" . }}
  labels:
    {{- include "common.labels" . | nindent 4 }}
  {{- with .Values.headscale.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- with .Values.headscale.ingress.ingressClassName }}
  ingressClassName: {{.}}
  {{- end }}
  defaultBackend:
    service:
      name: {{ include "headscale.serviceName" . }}
      port:
        number: {{ .Values.headscale.service.port }}
{{- end }}
{{- end }}
